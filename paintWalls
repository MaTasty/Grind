# what is the minimum cost to paint n walls; for each wall, we either 
# dp[i][j] = the min cost to pain j walls from 0th to ith tree
# create 2d array that fill by the order of column
class Solution:
    def paintWalls(self, cost: List[int], time: List[int]) -> int:
        dp = [[float("inf")]*(len(cost)+1) for i in range(len(cost)+1)]
        for i in range(len(cost)+1): 
            dp[i][0] = 0
        for i in range(1, len(cost)+1): 
            for j in range(len(cost)+1): 
                dp[i][j] = min(cost[i-1]+dp[i-1][max(j-time[i-1]-1, 0)], dp[i-1][j])
        return int(dp[-1][-1])
